string.new(): Створює новий, порожній рядок.
string.from("text"): Створює рядок з даних, які передані у вигляді слайсу байтів.
string.push('c'): Додає символ до кінця рядка.
string.push_str("text"): Додає рядок до кінця іншого рядка.
string.len(): Повертає довжину рядка.
string.is_empty(): Перевіряє, чи є рядок порожнім.
string.clear(): Очищає рядок.
string.contains("text"): Перевіряє, чи містить рядок вказаний підрядок.
string.replace("old", "new"): Замінює всі входження підрядка на новий підрядок.
string.to_uppercase(): Перетворює всі символи рядка на великі літери.
string.to_lowercase(): Перетворює всі символи рядка на малі літери.
string.trim(): Видаляє пробіли з початку та кінця рядка.
string.split("separator"): Розділяє рядок на частини за вказаним роздільником.
string.starts_with("prefix"): Перевіряє, чи починається рядок з вказаного префікса.
string.ends_with("suffix"): Перевіряє, чи закінчується рядок на вказаний суфікс.
string.chars(): Повертає ітератор по символах рядка.
string.lines(): Повертає ітератор по рядках, розділених символом нового рядка.
string.as_str(): Повертає слайс рядка.
string.repeat(n): Повторює рядок n разів.
string.find("text"): Повертає позицію першого входження підрядка, або None, якщо не знайдено.
string.last(): Повертає останній символ рядка.
string.first(): Повертає перший символ рядка.
string.pop(): Видаляє останній символ з рядка і повертає його.
string.insert(index, 'c'): Вставляє символ у вказану позицію.
string.remove(index): Видаляє символ з вказаної позиції.
string.split_whitespace(): Розділяє рядок на частини за пробілами.
string.trim_start(): Видаляє пробіли з початку рядка.
string.trim_end(): Видаляє пробіли з кінця рядка.
string.to_string(): Перетворює слайс на рядок.
string.as_mut_str(): Повертає змінний слайс рядка.
string.insert_str(index, "text"): Вставляє рядок у вказану позицію.
string.remove_range(range): Видаляє символи в заданому діапазоні.
string.replace_range(range, "text"): Замінює символи в заданому діапазоні на новий рядок.
string.split_at(index): Розділяє рядок на дві частини за вказаним індексом.
string.copy(): Створює копію рядка.
string.eq("text"): Порівнює рядок з іншим рядком на рівність.
string.to_owned(): Створює власну копію рядка.
string.as_bytes(): Повертає слайс байтів, що представляє рядок.
string.from_utf8(bytes): Створює рядок з вектора байтів.
string.get(index): Повертає символ за вказаним індексом, або None, якщо індекс виходить за межі.
string.splitn(n, "separator"): Розділяє рядок на n частин за вказаним роздільником.
string.rsplitn(n, "separator"): Розділяє рядок на n частин, починаючи з кінця, за вказаним роздільником.
string.contains(&"text"): Перевіряє, чи містить рядок вказаний підрядок.
string.bytes(): Повертає ітератор по байтах рядка.
string.as_mut_vec(): Повертає змінний вектор байтів, що представляє рядок.
string.retain(predicate): Залишає тільки ті символи, які відповідають заданому предикату.
string.truncate(len): Усікає рядок до вказаної довжини.
string.into_bytes(): Перетворює рядок на вектор байтів, забираючи володіння рядком.
string.parse(): Перетворює рядок на інший тип даних, якщо для нього реалізований трейт FromStr.
string.is_char_boundary(index): Перевіряє, чи є вказаний індекс границею символу.
string.capacity(): Повертає поточну ємність виділеної пам'яті для рядка.
string.reserve(additional): Резервує додаткову пам'ять для рядка.
string.shrink_to_fit(): Зменшує ємність рядка до мінімальної необхідної.
vec.push(value): Додає елемент до кінця вектора.
vec.pop(): Видаляє останній елемент з вектора і повертає його.
vec.len(): Повертає кількість елементів у векторі.
vec.is_empty(): Перевіряє, чи є вектор порожнім.
vec.clear(): Очищає вектор, видаляючи всі елементи.
vec.contains(&value): Перевіряє, чи містить вектор вказане значення.
vec.get(index): Повертає посилання на елемент за вказаним індексом, або None, якщо індекс виходить за межі.
vec.insert(index, value): Вставляє елемент у вказану позицію.
vec.remove(index): Видаляє елемент з вектора за вказаним індексом.
vec.extend(other): Додає елементи з іншого колекції до вектора.
vec.sort(): Сортує елементи вектора.
vec.reverse(): Реверсує порядок елементів у векторі.
vec.dedup(): Видаляє сусідні дублікати з вектора.
vec.split_at(mid): Розділяє вектор на дві частини за вказаним індексом.
vec.clone(): Створює копію вектора.
vec.copy_within(range, dest): Копіює елементи вектора в інше місце.
vec.resize(new_len, value): Змінює розмір вектора, заповнюючи нові елементи значенням.
vec.swap(index1, index2): Міняє місцями елементи за вказаними індексами.
vec.sort_unstable(): Сортує елементи вектора без гарантії стабільності.
vec.truncate(len): Зменшує розмір вектора до вказаного значення.
vec.as_slice(): Повертає слайс, що представляє вектор.
vec.as_mut_slice(): Повертає змінний слайс, що представляє вектор.
vec.iter(): Повертає ітератор по елементах вектора.
vec.iter_mut(): Повертає змінний ітератор по елементах вектора.
vec.first(): Повертає перший елемент вектора, або None, якщо вектор порожній.
vec.last(): Повертає останній елемент вектора, або None, якщо вектор порожній.
vec.split_first(): Повертає перший елемент і залишок вектора.
vec.split_last(): Повертає останній елемент і залишок вектора.
vec.windows(size): Повертає ітератор по вікнам заданого розміру.
vec.fill(value): Заповнює вектор вказаним значенням.
vec.extend_from_slice(slice): Додає елементи з слайсу до вектора.
vec.retain(predicate): Залишає лише ті елементи, які задовольняють предикат.
vec.partition(predicate): Розділяє вектор на дві частини за предикатом.
vec.into_iter(): Перетворює вектор в ітератор.
vec.append(&mut other): Додає елементи з іншого вектора до поточного.
vec.insert_many(index, iter): Вставляє кілька елементів у вказану позицію.
vec.remove_range(range): Видаляє елементи в заданому діапазоні.
vec.replace_with&lt;F&gt;(f): Замінює елементи вектора, застосовуючи функцію.
vec.sort_by&lt;F&gt;(f): Сортує елементи вектора за заданим критерієм.
vec.sort_by_key&lt;F, K&gt;(f): Сортує елементи вектора за ключем, отриманим з функції.
vec.binary_search(&value): Виконує бінарний пошук для знаходження значення у відсортованому векторі.
vec.binary_search_by&lt;F&gt;(f): Виконує бінарний пошук за заданим критерієм.
vec.binary_search_by_key(&key, |x| ...): Виконує бінарний пошук за ключем, отриманим з функції.
vec.swap_remove(index): Видаляє елемент за вказаним індексом і повертає його, замінюючи його останнім елементом.
vec.try_reserve(additional): Спробує зарезервувати місце для додаткових елементів.
vec.try_reserve_exact(additional): Спробує зарезервувати точну кількість місця для додаткових елементів.
vec.reserve(additional): Резервує місце для додаткових елементів.
vec.reserve_exact(additional): Резервує точну кількість місця для додаткових елементів.
vec.copy_from_slice(slice): Копіює елементи з слайсу в вектор.
vec.as_ptr(): Повертає вказівник на перший елемент вектора.
vec.as_mut_ptr(): Повертає змінний вказівник на перший елемент вектора.
vec.align_to&lt;T&gt;(): Вирівнює вектор до типу T.
vec.split_off(index): Розділяє вектор на дві частини за вказаним індексом.
vec.into_boxed_slice(): Перетворює вектор у "упакований" слайс.
vec.into_iter(): Перетворює вектор в ітератор, що споживає елементи.
vec.iter().cloned(): Повертає ітератор, що копіює елементи.
vec.iter().copied(): Повертає ітератор, що копіює елементи за значенням.
vec.iter().enumerate(): Повертає ітератор, що надає індекс та елемент.
vec.iter().zip(other): Повертає ітератор, що об'єднує два ітератори.
vec.iter().filter(predicate): Повертає ітератор, що фільтрує елементи за предикатом.
vec.iter().map(map_fn): Повертає ітератор, що трансформує елементи за функцією.
vec.iter().fold(init, fold_fn): Застосовує функцію до елементів, накопичуючи результат.
vec.iter().for_each(action): Застосовує дію до кожного елемента.
vec.iter().collect(): Збирає елементи ітератора в колекцію.
vec.iter().position(predicate): Повертає позицію першого елемента, що задовольняє предикат.
vec.iter().rposition(predicate): Повертає позицію останнього елемента, що задовольняє предикат.
vec.iter().find(predicate): Повертає перший елемент, що задовольняє предикат.
vec.iter().find_map(map_fn): Повертає перший елемент, що задовольняє предикат, застосовуючи функцію.
vec.iter().all(predicate): Перевіряє, чи всі елементи задовольняють предикат.
vec.iter().any(predicate): Перевіряє, чи є хоча б один елемент, що задовольняє предикат.
vec.iter().count(): Повертає кількість елементів в ітераторі.
vec.iter().take(n): Повертає перші n елементів з ітератора.
vec.iter().skip(n): Пропускає перші n елементів з ітератора.
vec.iter().take_while(predicate): Повертає елементи, поки предикат істинний.
vec.iter().skip_while(predicate): Пропускає елементи, поки предикат істинний.
vec.iter().chain(other): Об'єднує два ітератори.
vec.iter().flat_map(map_fn): Повертає ітератор, що розгортає результати функції.
vec.iter().partition(predicate): Розділяє елементи на дві колекції за предикатом.
vec.iter().zip(other): Повертає ітератор, що об'єднує два ітератори в пари.
vec.iter().scan(init, scan_fn): Повертає ітератор, що накопичує значення.
vec.iter().inspect(action): Застосовує дію до кожного елемента, не змінюючи їх.
vec.iter().collect::&lt;Vec&lt;_&gt;&gt;(): Збирає елементи ітератора в новий вектор.
vec.iter().map(map_fn): Повертає ітератор, що трансформує елементи.
vec.iter().filter_map(map_fn): Повертає ітератор, що фільтрує та трансформує елементи.
vec.iter().cycle(): Повертає ітератор, що безкінечно повторює елементи вектора.
vec.sort(): Сортує елементи вектора за зростанням.
vec.dedup_by&lt;F&gt;(f): Видаляє сусідні дублікати, використовуючи задану функцію.
vec.dedup_by_key&lt;F, K&gt;(f): Видаляє сусідні дублікати за ключем, отриманим з функції.
vec.split_off(index): Розділяє вектор на дві частини, повертаючи частину з вказаного індексу.
vec.extend(other): Додає елементи з іншої колекції до вектора.
vec.swap_with_slice(other): Міняє місцями елементи з іншим вектором.
vec.sort_by_cached_key&lt;F, K&gt;(f): Сортує елементи вектора за ключем, кешуючи результати.
vec.sort_unstable_by&lt;F&gt;(f): Сортує елементи вектора без гарантії стабільності за заданим критерієм.
vec.sort_unstable_by_key&lt;F, K&gt;(f): Сортує елементи вектора без гарантії стабільності за ключем.
vec.remove(index): Видаляє елемент з вектора за вказаним індексом
vec.truncate(len): Зменшує розмір вектора до вказаного значення, видаляючи елементи з кінця.
